name: 'Code Quality Checks'

on:
    push:
        branches:
            - '*'
            # - '!main'
    pull_request:
        branches: ['*']

jobs:
    quality_checks_global:
        name: 'Quality Checks (Global)'
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: |
                      - recursive: true
                        args: [--frozen-lockfile]
            - name: Check formatting with Prettier
              run: npm run format
            - name: Validate Branch Name
              run: npx validate-branch-name

    quality_checks_ts:
        name: 'Quality Checks (TypeScript)'
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: |
                      - recursive: true
                        args: [--frozen-lockfile]
            - name: Check formatting with Prettier
              run: npm run format
            - name: Lint with ESLint
              run: cd ./dashboard && npm run lint
            - name: Typecheck with TypeScript
              run: cd ./dashboard && npm run typecheck

    quality_checks_py:
        name: 'Quality Checks (Python)'
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                  python-version: 3.11
                  cache: 'pip'
            - run: cd ./api && pip install -r requirements.txt
            - name: Check sorting with isort
              run: cd ./api && python3 -m isort . --check-only --multi-line 3
            - name: Check formatting with Black
              run: cd ./api && python3 -m black . --target-version=py311 --check
            - name: Lint with Flake8
              run: cd ./api && python3 -m flake8 --max-line-length 99
