services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    # network_mode: "host"
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '67:67/udp' # Only required if you are using Pi-hole as your DHCP server
      - '80:80/tcp'
    environment:
      TZ: 'America/Boise'
      WEBPASSWORD_FILE: /run/secrets/pihole_password
      CORS_HOSTS: 'localhost,127.0.0.1,${SERVER_IP},localhost:80,localhost:8000,localhost:8080,localhost:5173,127.0.0.1:5173,SERVER_IP:8080'
      WEBTHEME: 'default-dark'
      TEMPERATUREUNIT: 'f'
      # FTLCONF_LOCAL_IPV4: '${PIHOLE_IP}'
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    # cap_add:
    #  - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    security_opt:
      - seccomp=unconfined
    restart: unless-stopped

  diagnostics_api:
    container_name: 'diagnostics_api'
    build:
      context: ./api_diagnostics
    command: 'uvicorn api.main:api --proxy-headers --host 0.0.0.0 --port 8000 --root-path /api/diagnostics --reload'
    environment:
      PIHOLE_IP: '${PIHOLE_IP}'
      SERVER_IP: '${SERVER_IP}'
    volumes:
      - ./api_diagnostics:/app/api
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    expose:
      - '8000'
    restart: 'unless-stopped'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.diagnostics_api.entrypoints=web'
      - 'traefik.http.routers.diagnostics_api.rule=Host(`${PIHOLE_IP}`) && PathPrefix(`/api/diagnostics`)'
      - 'traefik.http.routers.diagnostics_api.middlewares=diagnostics_api-stripprefix'
      - 'traefik.http.middlewares.diagnostics_api-stripprefix.stripprefix.prefixes=/api/diagnostics'

  traefik:
    container_name: 'reverse_proxy'
    image: 'traefik:v2.10'
    command:
      # - "--log.level=DEBUG"
      - '--log.level=INFO'
      - '--api.insecure=true'
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:81'
    ports:
      - '81:81'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
