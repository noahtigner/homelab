version: '3.9'

services:
  api:
    container_name: api
    build:
      context: ./api
    command: 'uvicorn api.main:api --proxy-headers --host 0.0.0.0 --port 8080 --root-path /api --reload'
    volumes:
      - ./api:/app/api
    expose:
      - '8080'
    restart: 'unless-stopped'
    environment:
      PIHOLE_API_BASE: 'http://${IP}/admin/api.php'
    secrets:
      - pihole_api_token
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.entrypoints=web'
      - 'traefik.http.routers.api.rule=Host(`${IP}`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.api.middlewares=api-stripprefix'
      - 'traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api'

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    # network_mode: "host"
    # ports:
    #   - '53:53/tcp'
    #   - '53:53/udp'
    #   - '67:67/udp' # Only required if you are using Pi-hole as your DHCP server
    #   - '80:80/tcp'
    environment:
      TZ: 'America/Boise'
      WEBPASSWORD_FILE: /run/secrets/pihole_password
      CORS_HOSTS: 'localhost,127.0.0.1,${IP},localhost:80,localhost:8000,localhost:8080,localhost:5173'
      WEBTHEME: 'default-dark'
      TEMPERATUREUNIT: 'f'
      # FTLCONF_LOCAL_IPV4: '${IP}'
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    # cap_add:
    #  - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    security_opt:
      - seccomp=unconfined
    restart: unless-stopped
    labels:
    - "traefik.http.routers.pihole.rule=Host(`${IP}`)"
    - "traefik.http.routers.pihole.entrypoints=websecure"
    - "traefik.http.routers.pihole.tls=true"
    - "traefik.http.routers.pihole.tls.certresolver=letsencrypt"
    - "traefik.http.routers.pihole.tls.domains[0].main=${IP}"
    - "traefik.http.routers.pihole.tls.domains[0].sans=${IP}"
    - "traefik.http.services.pihole.loadbalancer.server.port=80"

  traefik:
    container_name: 'reverse-proxy'
    image: 'traefik:v2.10'
    command:
      # - "--log.level=DEBUG"
      - '--api.insecure=true'
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      # - "--providers.docker=true"
      # - "--providers.docker.network=traefik-net"  # replace with your configured Docker network name
      # - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=noahzanetigner@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  whoami:
    container_name: 'whoami'
    image: 'traefik/whoami'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`${IP}`) && PathPrefix(`/whoami`)'
      - 'traefik.http.routers.whoami.entrypoints=web'

secrets:
  pihole_password:
    file: './secrets/pihole_password.txt'
  pihole_api_token:
    file: './secrets/pihole_api_token.txt'
