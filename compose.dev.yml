version: '3.9'

services:
  api:
    build:
      context: ./api
    command: 'uvicorn api.main:api --proxy-headers --host 0.0.0.0 --port 8000 --root-path /api --reload'
    volumes:
      - ./api:/app/api
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    expose:
      - '8000'
    restart: 'unless-stopped'
    environment:
      PIHOLE_API_BASE: 'http://${PIHOLE_IP}/admin'
      LEETCODE_USERNAME: '${LEETCODE_USERNAME}'
      GITHUB_USERNAME: '${GITHUB_USERNAME}'
      OGP_IO_API_KEY: '${OGP_IO_API_KEY}'
      GA4_PROPERTY_ID: '${GA4_PROPERTY_ID}'
    secrets:
      - pihole_api_token
      - ga4_credentials
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.entrypoints=web'
      - 'traefik.http.routers.api.rule=Host(`${PIHOLE_IP}`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.api.middlewares=api-stripprefix'
      - 'traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api'

  traefik:
    container_name: 'reverse_proxy'
    image: 'traefik:v2.10'
    command:
      # - "--log.level=DEBUG"
      - '--log.level=INFO'
      - '--api.insecure=true'
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:81'
    ports:
      - '81:81'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  whoami:
    container_name: 'whoami'
    image: 'traefik/whoami'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`${PIHOLE_IP}`) && PathPrefix(`/whoami`)'
      - 'traefik.http.routers.whoami.entrypoints=web'

  dashboard:
    container_name: dashboard
    build:
      context: ./dashboard
      target: dev
    command: 'pnpm run dev'
    environment:
      API_BASE: 'http://${PIHOLE_IP}:81/api'
      LEETCODE_USERNAME: '${LEETCODE_USERNAME}'
      GITHUB_USERNAME: '${GITHUB_USERNAME}'
    volumes:
      - './dashboard:/app'
      - 'exclude:/app/node_modules/'
    ports:
      - '5173:5173'
    restart: 'unless-stopped'

  slack_bot:
    container_name: slack_bot
    build:
      context: ./slackbot
    command: 'python3 slackbot/main.py'
    volumes:
      - ./slackbot:/app/slackbot
    restart: 'unless-stopped'
    secrets:
      - slack_bot_token
      - slack_app_token

  cache:
    container_name: cache
    image: redis:alpine
    command: redis-server --save 60 1
    restart: 'unless-stopped'
    ports:
      - '6379:6379'

  speedtest:
    container_name: speedtest
    build:
      context: ./speedtest
    command: 'python3 -u run.py'

volumes:
  exclude:

secrets:
  pihole_password:
    file: './secrets/pihole_password.txt'
  pihole_api_token:
    file: './secrets/pihole_api_token.txt'
  slack_bot_token:
    file: './secrets/slack_bot_token.txt'
  slack_app_token:
    file: './secrets/slack_app_token.txt'
  ga4_credentials:
    file: './secrets/ga4_credentials.json'
